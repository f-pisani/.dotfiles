#!/bin/bash

# The return value of a pipeline is the status of
# the last command to exit with a non-zero status,
# or zero if no command exited with a non-zero status
set -o pipefail
set -o nounset # Treat unset variables as an error when substituting.
set -o errexit # Exit immediately if a command exits with a non-zero status.

DIR=$([[ $(realpath "$0") =~ (.+/.dotfiles) ]] && echo "${BASH_REMATCH[1]}")
source "${DIR}/lib/must_be_run_as_root"
source "${DIR}/lib/add_apt_source"

echo -e "${BIGREEN}$(figlet "Docker")${NC}"

add_apt_source "docker" \
               "https://download.docker.com/linux/debian/gpg" \
               "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable"

echo -e "${BIYELLOW}Installing Docker Engine...${NC}"
apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
if ! getent group "docker" &>/dev/null; then
  groupadd docker
fi
usermod -aG docker "$SUDO_USER"
systemctl enable docker.service
systemctl enable containerd.service
echo
echo -e "${ICYAN}$(docker version)\n$(docker compose version)${NC}"
echo -e "${BIYELLOW}Docker Engine installed.${NC}"
